AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: chapter5-data-pipeline
Globals: 
  Function: 
    Environment: 
      Variables: 
        TABLE_NAME: data-table
        clientid: ce5b2c39d7681153b059b561083f788328fec076a001df62fc41a9d3eef5a6fe
        clientsecret: 06127a29ea2dfd1e32fc2b0ba44aacdaf0978c77691e7f00d97bd3172a9408cc
        database: udbprod
        dbPassword: 35g8EdSH
        dbUser: idmgtdb2
        host: pbudwprod
        port: 7450
        urlPrefix: "jdbc:db2"
        weeklyupdate: Friday
    MemorySize: 512
    Runtime: java8
    Timeout: 10
Resources:
  PipelineStartBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-${AWS::AccountId}-${AWS::Region}-start
  BulkEventsLambda:
    Type: AWS::Serverless::Function 
    Properties: 
      CodeUri: target/DemoJava-0.0.1-SNAPSHOT.jar
      Environment: 
        Variables: 
          FAN_OUT_TOPIC: FanOutTopic
      Handler: "demo.test::handler"
      MemorySize: 512
      Policies: 
        - 
          S3ReadPolicy: 
            BucketName: "${AWS::StackName}-${AWS::AccountId}-${AWS::Region}-start"
        - 
          SNSPublishMessagePolicy: 
            TopicName: FanOutTopic.TopicName
      Role: "arn:aws:iam::515025432918:role/service-role/testrole1"
      Timeout: 300
      VpcConfig: 
        SecurityGroupIds: 
          - sg-040ed53e
        SubnetIds: 
          - subnet-6a66c00c
          - subnet-a9029aa7
  SingleEventLambda:
    Type: AWS::Serverless::Function
    Properties: 
      CodeUri: target/DemoJava-0.0.1-SNAPSHOT.jar
      Environment: 
        Variables: 
          FAN_OUT_TOPIC: FanOutTopic
      Handler: "demo.test::handler"
      MemorySize: 512
      Policies: 
        - 
          S3ReadPolicy: 
            BucketName: "${AWS::StackName}-${AWS::AccountId}-${AWS::Region}-start"
        - 
          SNSPublishMessagePolicy: 
            TopicName: FanOutTopic.TopicName
      Role: "arn:aws:iam::515025432918:role/service-role/testrole1"
      Timeout: 300
      VpcConfig: 
        SecurityGroupIds: 
          - sg-040ed53e
        SubnetIds: 
          - subnet-6a66c00c
          - subnet-a9029aa7 
  MyStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: "arn:aws:iam::515025432918:role/service-role/testrole1"
      StateMachineName: !Sub "${AWS::StackName}-MyStateMachine"
      DefinitionString:
        !Sub
          - |-
            {
              "Comment": "A Hello World example using an AWS Lambda function",
              "StartAt": "HelloWorld",
              "States": {
                "HelloWorld": {
                  "Type": "Task",
                  "Resource": "${lambdaArn}",
                  "End": true
                }
              }
            }
          - {lambdaArn: !GetAtt [ BulkEventsLambda, Arn ]}
  
  ScheduledEventRule:
    Type: "AWS::Events::Rule"
    Properties:
      Description: "Scheduled event to trigger Step Functions state machine"
      ScheduleExpression: cron(0 10 ? * SAT-SUN *)
      State: "ENABLED"
      Targets:
        -
          Arn: !Ref MyStateMachine
          Id: !GetAtt MyStateMachine.Name
          RoleArn: "arn:aws:iam::515025432918:role/service-role/testrole1"     
